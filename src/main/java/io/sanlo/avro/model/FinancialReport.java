/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.sanlo.avro.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FinancialReport extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -257398722988210294L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FinancialReport\",\"namespace\":\"io.sanlo.avro.model\",\"fields\":[{\"name\":\"companyId\",\"type\":\"int\"},{\"name\":\"companyName\",\"type\":\"string\"},{\"name\":\"appName\",\"type\":\"string\"},{\"name\":\"riskScore\",\"type\":\"int\"},{\"name\":\"riskRating\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FinancialReport> ENCODER =
      new BinaryMessageEncoder<FinancialReport>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FinancialReport> DECODER =
      new BinaryMessageDecoder<FinancialReport>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<FinancialReport> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<FinancialReport> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FinancialReport>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this FinancialReport to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a FinancialReport from a ByteBuffer. */
  public static FinancialReport fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int companyId;
  @Deprecated public java.lang.CharSequence companyName;
  @Deprecated public java.lang.CharSequence appName;
  @Deprecated public int riskScore;
  @Deprecated public java.lang.CharSequence riskRating;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FinancialReport() {}

  /**
   * All-args constructor.
   * @param companyId The new value for companyId
   * @param companyName The new value for companyName
   * @param appName The new value for appName
   * @param riskScore The new value for riskScore
   * @param riskRating The new value for riskRating
   */
  public FinancialReport(java.lang.Integer companyId, java.lang.CharSequence companyName, java.lang.CharSequence appName, java.lang.Integer riskScore, java.lang.CharSequence riskRating) {
    this.companyId = companyId;
    this.companyName = companyName;
    this.appName = appName;
    this.riskScore = riskScore;
    this.riskRating = riskRating;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return companyId;
    case 1: return companyName;
    case 2: return appName;
    case 3: return riskScore;
    case 4: return riskRating;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: companyId = (java.lang.Integer)value$; break;
    case 1: companyName = (java.lang.CharSequence)value$; break;
    case 2: appName = (java.lang.CharSequence)value$; break;
    case 3: riskScore = (java.lang.Integer)value$; break;
    case 4: riskRating = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'companyId' field.
   * @return The value of the 'companyId' field.
   */
  public java.lang.Integer getCompanyId() {
    return companyId;
  }

  /**
   * Sets the value of the 'companyId' field.
   * @param value the value to set.
   */
  public void setCompanyId(java.lang.Integer value) {
    this.companyId = value;
  }

  /**
   * Gets the value of the 'companyName' field.
   * @return The value of the 'companyName' field.
   */
  public java.lang.CharSequence getCompanyName() {
    return companyName;
  }

  /**
   * Sets the value of the 'companyName' field.
   * @param value the value to set.
   */
  public void setCompanyName(java.lang.CharSequence value) {
    this.companyName = value;
  }

  /**
   * Gets the value of the 'appName' field.
   * @return The value of the 'appName' field.
   */
  public java.lang.CharSequence getAppName() {
    return appName;
  }

  /**
   * Sets the value of the 'appName' field.
   * @param value the value to set.
   */
  public void setAppName(java.lang.CharSequence value) {
    this.appName = value;
  }

  /**
   * Gets the value of the 'riskScore' field.
   * @return The value of the 'riskScore' field.
   */
  public java.lang.Integer getRiskScore() {
    return riskScore;
  }

  /**
   * Sets the value of the 'riskScore' field.
   * @param value the value to set.
   */
  public void setRiskScore(java.lang.Integer value) {
    this.riskScore = value;
  }

  /**
   * Gets the value of the 'riskRating' field.
   * @return The value of the 'riskRating' field.
   */
  public java.lang.CharSequence getRiskRating() {
    return riskRating;
  }

  /**
   * Sets the value of the 'riskRating' field.
   * @param value the value to set.
   */
  public void setRiskRating(java.lang.CharSequence value) {
    this.riskRating = value;
  }

  /**
   * Creates a new FinancialReport RecordBuilder.
   * @return A new FinancialReport RecordBuilder
   */
  public static io.sanlo.avro.model.FinancialReport.Builder newBuilder() {
    return new io.sanlo.avro.model.FinancialReport.Builder();
  }

  /**
   * Creates a new FinancialReport RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FinancialReport RecordBuilder
   */
  public static io.sanlo.avro.model.FinancialReport.Builder newBuilder(io.sanlo.avro.model.FinancialReport.Builder other) {
    return new io.sanlo.avro.model.FinancialReport.Builder(other);
  }

  /**
   * Creates a new FinancialReport RecordBuilder by copying an existing FinancialReport instance.
   * @param other The existing instance to copy.
   * @return A new FinancialReport RecordBuilder
   */
  public static io.sanlo.avro.model.FinancialReport.Builder newBuilder(io.sanlo.avro.model.FinancialReport other) {
    return new io.sanlo.avro.model.FinancialReport.Builder(other);
  }

  /**
   * RecordBuilder for FinancialReport instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FinancialReport>
    implements org.apache.avro.data.RecordBuilder<FinancialReport> {

    private int companyId;
    private java.lang.CharSequence companyName;
    private java.lang.CharSequence appName;
    private int riskScore;
    private java.lang.CharSequence riskRating;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.sanlo.avro.model.FinancialReport.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.companyId)) {
        this.companyId = data().deepCopy(fields()[0].schema(), other.companyId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.companyName)) {
        this.companyName = data().deepCopy(fields()[1].schema(), other.companyName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.appName)) {
        this.appName = data().deepCopy(fields()[2].schema(), other.appName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.riskScore)) {
        this.riskScore = data().deepCopy(fields()[3].schema(), other.riskScore);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.riskRating)) {
        this.riskRating = data().deepCopy(fields()[4].schema(), other.riskRating);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing FinancialReport instance
     * @param other The existing instance to copy.
     */
    private Builder(io.sanlo.avro.model.FinancialReport other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.companyId)) {
        this.companyId = data().deepCopy(fields()[0].schema(), other.companyId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.companyName)) {
        this.companyName = data().deepCopy(fields()[1].schema(), other.companyName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.appName)) {
        this.appName = data().deepCopy(fields()[2].schema(), other.appName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.riskScore)) {
        this.riskScore = data().deepCopy(fields()[3].schema(), other.riskScore);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.riskRating)) {
        this.riskRating = data().deepCopy(fields()[4].schema(), other.riskRating);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'companyId' field.
      * @return The value.
      */
    public java.lang.Integer getCompanyId() {
      return companyId;
    }

    /**
      * Sets the value of the 'companyId' field.
      * @param value The value of 'companyId'.
      * @return This builder.
      */
    public io.sanlo.avro.model.FinancialReport.Builder setCompanyId(int value) {
      validate(fields()[0], value);
      this.companyId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'companyId' field has been set.
      * @return True if the 'companyId' field has been set, false otherwise.
      */
    public boolean hasCompanyId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'companyId' field.
      * @return This builder.
      */
    public io.sanlo.avro.model.FinancialReport.Builder clearCompanyId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'companyName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCompanyName() {
      return companyName;
    }

    /**
      * Sets the value of the 'companyName' field.
      * @param value The value of 'companyName'.
      * @return This builder.
      */
    public io.sanlo.avro.model.FinancialReport.Builder setCompanyName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.companyName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'companyName' field has been set.
      * @return True if the 'companyName' field has been set, false otherwise.
      */
    public boolean hasCompanyName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'companyName' field.
      * @return This builder.
      */
    public io.sanlo.avro.model.FinancialReport.Builder clearCompanyName() {
      companyName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'appName' field.
      * @return The value.
      */
    public java.lang.CharSequence getAppName() {
      return appName;
    }

    /**
      * Sets the value of the 'appName' field.
      * @param value The value of 'appName'.
      * @return This builder.
      */
    public io.sanlo.avro.model.FinancialReport.Builder setAppName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.appName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'appName' field has been set.
      * @return True if the 'appName' field has been set, false otherwise.
      */
    public boolean hasAppName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'appName' field.
      * @return This builder.
      */
    public io.sanlo.avro.model.FinancialReport.Builder clearAppName() {
      appName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'riskScore' field.
      * @return The value.
      */
    public java.lang.Integer getRiskScore() {
      return riskScore;
    }

    /**
      * Sets the value of the 'riskScore' field.
      * @param value The value of 'riskScore'.
      * @return This builder.
      */
    public io.sanlo.avro.model.FinancialReport.Builder setRiskScore(int value) {
      validate(fields()[3], value);
      this.riskScore = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'riskScore' field has been set.
      * @return True if the 'riskScore' field has been set, false otherwise.
      */
    public boolean hasRiskScore() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'riskScore' field.
      * @return This builder.
      */
    public io.sanlo.avro.model.FinancialReport.Builder clearRiskScore() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'riskRating' field.
      * @return The value.
      */
    public java.lang.CharSequence getRiskRating() {
      return riskRating;
    }

    /**
      * Sets the value of the 'riskRating' field.
      * @param value The value of 'riskRating'.
      * @return This builder.
      */
    public io.sanlo.avro.model.FinancialReport.Builder setRiskRating(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.riskRating = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'riskRating' field has been set.
      * @return True if the 'riskRating' field has been set, false otherwise.
      */
    public boolean hasRiskRating() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'riskRating' field.
      * @return This builder.
      */
    public io.sanlo.avro.model.FinancialReport.Builder clearRiskRating() {
      riskRating = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FinancialReport build() {
      try {
        FinancialReport record = new FinancialReport();
        record.companyId = fieldSetFlags()[0] ? this.companyId : (java.lang.Integer) defaultValue(fields()[0]);
        record.companyName = fieldSetFlags()[1] ? this.companyName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.appName = fieldSetFlags()[2] ? this.appName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.riskScore = fieldSetFlags()[3] ? this.riskScore : (java.lang.Integer) defaultValue(fields()[3]);
        record.riskRating = fieldSetFlags()[4] ? this.riskRating : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FinancialReport>
    WRITER$ = (org.apache.avro.io.DatumWriter<FinancialReport>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FinancialReport>
    READER$ = (org.apache.avro.io.DatumReader<FinancialReport>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
